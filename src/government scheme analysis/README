######################## PACKAGES USED #############################

json, csv, numpy

######################## HOW TO RUN ###########################

Please follow the steps and the check outputs(directory structure) at each step that are also given please ensure that they match 

##############  STEP 1

first of all give appropriate permissions to the bash file:
-chmod 700 directories.sh

run directories.sh
./directories.sh


** DIRECTORY STRUCTURE AFTER STEP 1

-this is the initial structure that must be present the:


government scheme analysis
			|
			|-------------hindi_tranlations (EMPTY)
			|
			|---------------fasal bima--|--outputs (folder will not be filled)
			|
			|---------------samman nidhi-|--outputs (folder will not be filled)
			|							 
			|---------------kcc---------|----outputs (folder will not be filled)
			|
			|---------------mandhan-----|----outputs (folder will not be filled)
			|
			|--------------preprocessing (folder will not be filled later on)
			|
			|--------------distinct_query_n_format_changing.py
			|
			|--------------word_tranformation_for_scheme_extraction.py
			|
			|--------------get_schemes_queries.py
			|
			|--------------tagging.py
			|
			|--------------supplementary (folder has files that were used during experimentation not used for any part as of now)


############ STEP 2

run the file distinct_query_n_format_changing.py
command: 'python3 distinct_query_n_format_changing.py'

** this part will take 5-10 mins to run
**changes occur in the ./preprocessing directory

This just created some modeifed version of files of the data.json and the queries of the type 'Government Schmes'

** DIRECTORY STRUCTURE AFTER STEP 2


government scheme analysis
			|
			|-------------hindi_tranlations (EMPTY)
			|
			|---------------fasal bima--|--outputs (folder will not be filled)
			|
			|---------------samman nidhi-|--outputs (folder will not be filled)
			|							 
			|---------------kcc---------|----outputs (folder will not be filled)
			|
			|---------------mandhan-----|----outputs (folder will not be filled)
			|
			|--------------preprocessing--|--batches---(folder having 24 files)
			|                             |--all_govt_query
			|                             |--distinct_govt_query
			|                             |--yr_st_gov_sch.json
			|
			|--------------distinct_query_n_format_changing.py
			|
			|--------------word_tranformation_for_scheme_extraction.py
			|
			|--------------get_schemes_queries.py
			|
			|--------------tagging.py
			|
			|--------------supplementary (folder has files that were used during experimentation not used for any part as of now)

########### STEP 3

translated all the 24 files in './preprocessing/batches' from 'www.onlinedoctranslator.com'(src=english target=hindi) concatenated the translated files and form a new file ohindi.txt and place it in ./hindi_tranlations.

alternatively you can also download ohindi.txt from 'https://drive.google.com/drive/folders/1XeHyNDEzHNTqDKcSGug6jA7LRbQkacRo?usp=sharing' this has the same directory structure, download the file from hindi_tranlations folder.

**changes occur in the ./hindi_tranlations directory

** DIRECTORY STRUCTURE AFTER STEP 3


government scheme analysis
			|
			|-------------hindi_tranlations-------ohindi.txt
			|
			|---------------fasal bima--|--outputs (folder will not be filled)
			|
			|---------------samman nidhi-|--outputs (folder will not be filled)
			|							 
			|---------------kcc---------|----outputs (folder will not be filled)
			|
			|---------------mandhan-----|----outputs (folder will not be filled)
			|
			|--------------preprocessing--|--batches---(folder having 24 files)
			|                             |--all_govt_query
			|                             |--distinct_govt_query
			|                             |--yr_st_gov_sch.json
			|
			|--------------distinct_query_n_format_changing.py
			|
			|--------------word_tranformation_for_scheme_extraction.py
			|
			|--------------get_schemes_queries.py
			|
			|--------------tagging.py
			|
			|--------------supplementary (folder has files that were used during experimentation not used for any part as of now)

###### STEP 4

Now run the file "word_tranformation_for_scheme_extraction.py"
command "python3 word_tranformation_for_scheme_extraction.py"


new file nhindi.txt is created from ohindi.txt

**changes occur in the ./hindi_tranlations directory

** DIRECTORY STRUCTURE AFTER STEP 4


government scheme analysis
			|
			|-------------hindi_tranlations-----|--ohindi.txt
			|                                   |--nhinid.txt
			|
			|---------------fasal bima--|--outputs (folder will not be filled)
			|
			|---------------samman nidhi-|--outputs (folder will not be filled)
			|							 
			|---------------kcc---------|----outputs (folder will not be filled)
			|
			|---------------mandhan-----|----outputs (folder will not be filled)
			|
			|--------------preprocessing--|--batches---(folder having 24 files)
			|                             |--all_govt_query
			|                             |--distinct_govt_query
			|                             |--yr_st_gov_sch.json
			|
			|--------------distinct_query_n_format_changing.py
			|
			|--------------word_tranformation_for_scheme_extraction.py
			|
			|--------------get_schemes_queries.py
			|
			|--------------tagging.py
			|
			|--------------supplementary (folder has files that were used during experimentation not used for any part as of now)


###### STEP 5

Now run the file "get_schemes_queries.py"
command "python3 get_schemes_queries.py"


new file nhindi.txt is created from ohindi.txt

**changes occur in the ./fasal bima;./samman nidhi;./kcc;./mandhan   directory

** DIRECTORY STRUCTURE AFTER STEP 5


government scheme analysis
			|
			|-------------hindi_tranlations-----|--ohindi.txt
			|                                   |--nhinid.txt
			|
			|---------------fasal bima--|--outputs (folder will not be filled)
			|                           |--fasal_bima_h.txt
			|
			|---------------samman nidhi-|--outputs (folder will not be filled)
			|		                     |--samman_nidhi_h1.txt
			|                            |--samman_nidhi_h2.txt
			|					 
			|---------------kcc---------|----outputs (folder will not be filled)
			|                           |----kcc_queries_h.txt
			|
			|---------------mandhan-----|----outputs (folder will not be filled)
			|                           |----mandhan_queries_h.txt
			|
			|--------------preprocessing--|--batches---(folder having 24 files)
			|                             |--all_govt_query
			|                             |--distinct_govt_query
			|                             |--yr_st_gov_sch.json
			|
			|--------------distinct_query_n_format_changing.py
			|
			|--------------word_tranformation_for_scheme_extraction.py
			|
			|--------------get_schemes_queries.py
			|
			|--------------tagging.py
			|
			|--------------supplementary (folder has files that were used during experimentation not used for any part as of now)

###### STEP 6

Now translate following files (src=Hindi target=English vice versa of previous part) from 'www.onlinedoctranslator.com'
1.  ./fasal bima -- fasal_bima_h.txt
	name the new file fasal_bima_en.txt and place it in the ./fasal directory
2.  ./samman nidhi -- samman_nidhi_h1.txt, samman_nidhi_h2.txt
	name the new files samman_nidhi_en1.txt and samman_nidhi_en2.txt repectively and place it in the ./samman nidhi  directory
3.  ./kcc -- kcc_queries_h.txt
	name the new files kcc_queries_en.txt and place it in the ./kcc directory
4.  ./mandhan -- mandhan_queries_h.txt
    name the new files mandhan_queries_en.txt and place it in the ./mandhan directory

NOTE: Alternatilvely u can also dowload them from 'https://drive.google.com/drive/folders/1XeHyNDEzHNTqDKcSGug6jA7LRbQkacRo?usp=sharing'

**changes occur in the ./fasal bima;./samman nidhi;./kcc;./mandhan   directory

** DIRECTORY STRUCTURE AFTER STEP 6


government scheme analysis
			|
			|-------------hindi_tranlations-----|--ohindi.txt
			|                                   |--nhinid.txt
			|
			|---------------fasal bima--|--outputs (state_count.csv,per_holding_state_counts.csv and state_wise_problems.csv)
			|                           |--fasal_bima_h.txt
			|                           |--fasal_bima_en.txt
			|
			|---------------samman nidhi-|--outputs (state_count.csv,per_holding_state_counts.csv and state_wise_problems.csv)
			|		                     |--samman_nidhi_h1.txt
			|                            |--samman_nidhi_h2.txt
			|                            |--samman_nidhi_en1.txt
			|                            |--samman_nidhi_en2.txt
			|				 
			|---------------kcc---------|----outputs (state_count.csv,per_holding_state_counts.csv and state_wise_problems.csv)
			|                           |----kcc_queries_h.txt
			|                           |----kcc_queries_en.txt
			|
			|---------------mandhan-----|----outputs (state_count.csv,per_holding_state_counts.csv and state_wise_problems.csv)
			|                           |----mandhan_queries_h.txt
			|                           |----mandhan_queries_en.txt
			|
			|--------------preprocessing--|--batches---(folder having 24 files)
			|                             |--all_govt_query
			|                             |--distinct_govt_query
			|                             |--yr_st_gov_sch.json
			|
			|--------------distinct_query_n_format_changing.py
			|
			|--------------word_tranformation_for_scheme_extraction.py
			|
			|--------------get_schemes_queries.py
			|
			|--------------tagging.py
			|
			|--------------supplementary (folder has files that were used during experimentation not used for any part as of now)


### STEP 7

rung the tagging.py
command : "python3 tagging.py"

This basically then gives us all the outputs lets me explain the outputs:
1. each of the scheme folder 'fasal bima','mandhan','kcc','samman nidhi' has a folder named 'output'.
2. In each out put folder the following files are there
	a. state_counts.csv: this the number of time a query for the scheme is asked in the given state
	b. per_holding_state_count.csv: this the (number of time a query for the scheme is asked in the given state)/(number of land holdings in the state)
	c. state_wise_problems.csv : for the given scheme how many queries for a given scheme are related to registration,finance,contact,web-site,not tagged etc is given(note the total may not be the same as the number of queries of the scheme as for eg there may be a query that is both registration and finance related).


For visualizing the 'state_counts.csv', and the 'per_holding_state_counts.csv' you can look at the plotting.ipynb just change the paths where commented and keep the headers of the input files as 'State' and 'Frequency' 